CSS говорит браузеру, как отображать веб-страницу. Вы можете использовать CSS для определения цвета, шрифта, размера и других аспектов элементов HTML.

В этом курсе вы изучите CSS, создавая страницу меню для веб-страницы кафе.



Шаг 1
В этом проекте вы узнаете основы CSS (Cascading Style Sheets) путем создания меню кафе. CSS - язык, используемый для стилизования HTML-документа. Он описывает, как элементы HTML должны отображаться на экране.

Как вы узнали в последних шагах Cat Photo App, существует базовая структура, необходимая для создания веб-страницы. Каждый HTML документ должен иметь декларацию DOCTYPE и элемент html. DOCTYPE сообщает браузеру, в какой версии HTML находится документ. Элемент html представляет собой корневой элемент, который содержит все остальные элементы.

Пример кода

<!DOCTYPE html>
<html lang="en">
<!--all other elements go here-->
</html>

Добавить тег <!DOCTYPE html> и элемент html с атрибутом lang = en.



Шаг 2
Добавить элемент head в html-элемент, чтобы можно было добавить элемент title. Текст элемента title должен быть Cafe Menu.



Шаг З
Заголовок является одним из нескольких элементов, которые предоставляют дополнительную информацию, которая не видна на веб-странице, но она полезна для поисковых систем или для того, как страница отображается.

Внутри элемента head, вложить мета-элемент с атрибутом под названием charset, установленным на значение utf-8, чтобы сказать браузеру, как кодировать символы для страницы.

Помните, что мета-элементы являются пустыми элементами, которые не требуют конечного тега.



Шаг 4
Чтобы подготовиться к созданию какого-либо реального контента, добавьте элемент body ниже элемента head.



Шаг 5
Пришло время добавить меню. Добавьте элемент main в существующий элемент body. Он будет содержать информацию о ценах на кофе и десерты, предлагаемые кафе.



Шаг 6
Название кафе - CAMPER CAFE. Добавьте элемент h1 в элементе main. Дайте ему имя кафе в прописных буквах, чтобы он выделился.



Шаг 7
Чтобы посетители знали, что кафе было основано в 2020 году, добавьте элемент р под элементом h1 с текстом Est. 2020.



Шаг 8
Меню будет состоять из двух разделов: для кофе и для десерта. Добавьте элемент siction в элементе main, чтобы у вас было место для всех доступных кофе.



Шаг 9
Создайте элемент h2 в элементе section и дайте ему текст Coffee.



Шаг 10
До сих пор у вас был ограниченный контроль над презентацией и внешним видом вашего контента. Чтобы изменить это, добавьте элемент style в head.



Шаг 11
Вы можете добавить стиль в элемент, указав его в элементе style и установив для него свойство:

Пример кода

element {
 property: value;
}

Центрировать содержимое элемента h1, установив его свойство text-align на центр center.



Шаг 12
На предыдущем шаге вы использовали селектор типа для стиля элемента h1. Центрировать содержимое элементов h2 и p, добавив новый тип селектора для каждого из них к существующему элементу стиля.



Шаг 13
Теперь у вас есть три селектора типов с одинаковым стилем. Вы можете добавить одну и ту же группу стилей для многих элементов, создав список селекторов. Каждый селектор разделен запятыми вот так:

Пример кода

selector1, selector2 {
  property: value;
}

Удалите три существующих селектора типов и заменяйте их одним списком селекторов, который центрирует текст для элементов h1, h2 и p.



Шаг 14
Вы создали три элемента, написав CSS внутри тега style. Это работает, но так как будет больше стилей, лучше всего положить все стили в отдельный файл и ссылку на него.

Отдельный файл styles.css был создан для вас. Вы можете переключаться между файлами с помощью вкладки в верхней части редактора.

Начните с переписывания созданных стилей в файл styles.css. Убедитесь, что вы исключили открывающиеся и закрывающиеся метки style.



Шаг 15
Теперь, когда у вас есть CSS в файле styles.css, вы можете удалить элемент style и все его содержимое. После удаления текст, который был сфокусирован, будет перемещаться обратно влево.



Шаг 16
Теперь вам нужно связать файл styles.css, так что стили будут снова применены. Внутри элемента head добавьте элемент link. Дайте ему атрибут rel с значением "stylesheet" и атрибут href с значением "styles.css".

Обратите внимание, что элемент связи является пустым элементом.



Шаг 17
Для того, чтобы стиль страницы выглядел таким же на мобильном, как и на настольном компьютере или ноутбуке, вам нужно добавить meta элемент с особым атрибутом content.

Добавить следующее в элемент head:

Пример кода

<meta name="viewport" content="width=device-width, initial-scale=1.0" />



Шаг 18
Текст снова центрирован, так что ссылка на файл CSS работает. Добавить в файл другой стиль, который изменяет свойство background-color на коричневый brown для элемента body.



Шаг 19
Этот коричневый фон затрудняет чтение текста. Изменить цвет фона элемента тела на burlywood, чтобы он имел какой-то цвет, но вы все равно сможете прочитать текст.



Шаг 20
Элемент div используется в основном для дизайна, в отличие от других элементов контента, которые вы использовали до сих пор. Добавить элемент div внутри элемента body, а затем переместить все другие элементы в новый div.

Внутри открывающего div-тега добавьте атрибут id с значением menu.



Шаг 21
Теперь цель состоит в том, чтобы div не занимал всю ширину страницы. Свойство width CSS идеально подходит для этого.

Вы можете использовать идентификатор для выбора определенного элемента с атрибутом id. Selector id определяется путём размещения хэш-символа # непосредственно перед значением id элемента. Например, если у элемента есть id cat, то вы бы выбрали этот элемент следующим образом:

Пример кода

#cat {
  width: 250px;
}

Используйте #menu для выделения элемента и дайте ему ширину 300px.



Шаг 22
Комментарии в CSS выглядят так:

Пример кода

/* comment here */

В вашем листе стилей, прокомментируйте строку, содержащую свойство и значение background-color, чтобы вы могли видеть эффект только стилизованного элемента #menu. Это сделает фон снова белым.



Шаг 23
Теперь используйте существующий #menu для выбора цвета фона для div-элемента, чтобы он был burlywood.



Шаг 24
Теперь легко увидеть, что текст находится в центре элемента #menu. В настоящее время ширина элемента #menu задана в пикселях (px).

Измените значение свойства width на 80%, чтобы оно было 80% шириной родительского элемента (body).



Шаг 25
Далее, вы хотите централизовать меню горизонтально. Вы можете сделать это, установив его свойства margin-left и margin-right на auto. Представьте, что поле является невидимым пространством вокруг элемента. Используя эти два свойства поля, центрируйте элемент #menu внутри элемента body.



Шаг 26
До сих пор вы использовали селекторы типа и id для стилизованных элементов. Однако, более распространенным является использование другого селектора для стиля ваших элементов.

Селектор class класса определяется именем с точкой прямо перед ним, как это:

Пример кода

.class-name {
  styles
}

Замените существующий #menu на class, заменив #menu классом .menu.



Шаг 27
Чтобы применить стиль класса к элементу div, удалите атрибут id и добавьте атрибут class в открывающий тег элемента div. Обязательно установите значение класса в menu.



Шаг 28
Поскольку основным продуктом кафе для продажи является кофе, вы можете использовать изображение кофейных зерен как фон страницы.

Удалить комментарий и его содержимое в поле выбора типа body. После этого добавьте свойство background-image и установите значение url(https://cdn.freecodecamp.org/curriculum/css-cafe/beans.jpg).



Шаг 29
Теперь, когда все выглядит хорошо, пришло время добавить несколько пунктов в меню.

Добавить пустой элемент article под заголовком Кофе. Он будет содержать вкус и цену каждого кофе, который вы предлагаете.



Шаг 30
Элементы article обычно содержат несколько элементов, имеющих связанную информацию. В этом случае он будет содержать вкус кофе и цену на этот вкус.

Помещайте два элемента p внутри вашего элемента article. Первый текст должен быть French Vanilla, а второй - 3.00.



Шаг 31
Начиная ниже существующей пары кофе/цены, добавляйте следующие кофе и цены с использованием элементов article с двумя вложенными элементами p внутри каждой:

Пример кода

Caramel Macchiato 3.75
Pumpkin Spice 3.50
Hazelnut 4.00
Mocha 4.50

Как и прежде, текст первого элемента р должен содержать вкус кофе, а второй элемент р должен содержать цену.



Шаг 32
Вкусы и цены в настоящее время штабелированы друг над другом и сфокусированы на их соответствующих элементах р. Было бы хорошо, если бы вкус был слева и цена была бы справа.

Добавить flavor имени класса к элементу French Vanilla p.



Шаг 33
Используя свой новый flavor в качестве селектора, установите значение свойства text-align на лево.



Шаг 34
Далее, вы хотите выровнять цену вправо. Добавьте именованную классом price к вашему элементу р, который имеет 3.00 в качестве текста.



Шаг 35
Теперь выровняйте текст вправо для элементов с классом price.



Шаг 36
Это своего рода то, что вы хотите, но сейчас было бы хорошо, если бы вкус и цена были на одной линии. р элементы являются элементами на уровне блока, поэтому они занимают всю ширину своего родительского элемента.

Чтобы они были на той же линии, нужно придать немного стиля элементам р, так что они будут больше похожи на встроенные элементы.

Чтобы сделать это, начните добавлять атрибут класса item элементом в первый элемент article под заголовком Coffee.



Шаг 37
Элементы р вложены в элемент article с атрибутом class item. Вы можете настраивать все элементы p, вложенные в любую точку элементов с помощью класса item, как это:

Пример кода

.item p { }

Используя вышеуказанный селектор, добавьте свойство display с значением inline-block, чтобы элементы p вели себя более как встроенные элементы.



Шаг 38
Это ближе, но цена не осталась справа. Это потому что элементы inline-blocks занимают только ширину их контента.

Для их распределения добавьте свойство width к классам flavor и price, каждый из которых имеет значение 50%.



Шаг 39
Ну, это не сработало. Оформление элементов р как inline-blocks и их размещение на отдельных строках создает дополнительное пространство справа от первого элемента p, что приводит к перемещению второго к следующей строке.

Один из способов исправить это - сделать ширину каждого элемента р чуть меньше 50%. Итак, измените значение ширины на 49% для каждого класса, чтобы увидеть, что происходит.



Шаг 40
Это сработало, но есть ещё немного места справа от цены.

Вы можете продолжать пробовать различные проценты для ширин. Вместо этого используйте клавишу backspace, чтобы переместить элемент р с классом price рядом с элементом p с классом flavor так, чтобы они были на одной строке в редакторе. Убедитесь, что между двумя элементами нет пространства.



Шаг 41
Теперь идите вперед и измените ширину класса flavor и price, чтобы быть 50% снова.



Шаг 42
Теперь, когда вы знаете, что это работает, вы можете изменить оставшиеся элементы article и р, чтобы соответствовать первому набору. Начните добавляя класс item к другим элементам article.



Шаг 43
Далее, расположите другие элементы р на одной и той же линии без пространства между ними.



Шаг 44
Для завершения стиля, добавьте подходящие названия классов flavor и price ко всем оставшимся элементам р.



Шаг 45
Если вы уменьшите ширину предварительного просмотра страницы, вы заметите, что в какой-то момент некоторый текст слева начинает закручиваться вокруг следующей строки. Это потому, что ширина элементов р с левой стороны может занимать только 50% пространства.

Поскольку цены справа имеют значительно меньше символов, обновите ширину класса flavor до 75% и ширину класса price до 25%.



Шаг 46
Вы вернетесь к стилизованному меню в нескольких шагах, но на данный момент, идите вперед и добавить второй элемент section ниже первого для отображения десертов, предлагаемых кафе.



Шаг 47
Добавить h2 элемент в новый section и дать ему текст Desserts.



Шаг 48
Добавить пустой элемент article под заголовком Desserts. Дать ему атрибут класса с значением item.



Шаг 49
Вставляйте два элемента p внутри вашего элемента article. Первый текст должен быть Donut, а второй - 1.50. Положите их оба на одну линию, убедившись, что между ними нет пространства.



Шаг 50
Для двух элементов р, которые вы только что добавили, добавьте dessert как значение атрибута класса первого элемента p, а price как атрибут класса второго элемента p.



Шаг 51
Что-то не так. Вы добавили правильное значение атрибута класса к элементу p с Donut в качестве его текста, но вы не определили для него селектор.

Правило CSS для класса flavor уже устанавливает нужные свойства. Добавьте десерт-класс в качестве дополнительного селектора для этого правила CSS.



Шаг 52
Под добавленной десертом добавляйте остальные десерты и цены, используя ещё три элемента article с двумя вложенными элементами p. Каждый элемент должен иметь правильный десерт и текст цены, а все они должны иметь правильные классы.

Пример кода

Cherry Pie 2.75
Cheesecake 3.00
Cinnamon Roll 2.50



Шаг 53
Вы можете дать вашему меню некоторое пространство между содержанием и сторонами с различными свойствами padding.

Дать классу menu 'padding-left' и 'padding-right' с одинаковым значением 20px.



Шаг 54
Выглядит лучше. Теперь попробуйте добавить те же 20px наполнения в верхнюю и нижнюю части меню.



Шаг 55
Поскольку все 4 стороны меню имеют одинаковое внутреннее расстояние, удалите четыре свойства и используйте одно свойство padding с значением 20px.



Шаг 56
Текущая ширина меню всегда будет занимать 80% ширины элемента body. На очень широком экране, кофе и десерт кажутся далеко от их цен.

Добавьте свойство max-width к классу menu с значением 500px, чтобы предотвратить его расширение.